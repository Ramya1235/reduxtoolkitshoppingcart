import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";
import axios from "axios";

// Initial state for the products slice
const initialState = {
  items: [], // Array to store the fetched products
  status: null, // Status to track the API request (pending, fulfilled, rejected)
};

// Create an asynchronous thunk for fetching products
export const productsFetch = createAsyncThunk(
  "products/productsFetch", // Unique string identifier for the action
  async () => {
    try {
      // Make an asynchronous API request to fetch products
      const response = await axios.get("http://localhost:5000/products");

      // Return the response data (list of products)
      return response.data;
    } catch (error) {
      console.log(error);
      // If there's an error, you can handle it here
      // For now, it logs the error to the console
    }
  }
);

// Create the products slice using createSlice
const productsSlice = createSlice({
  name: "products", // Name of the slice
  initialState, // Initial state defined above
  reducers: {}, // You can define additional reducer actions here if needed
  extraReducers: {
    // Handle actions dispatched by the productsFetch thunk
    [productsFetch.pending]: (state, action) => {
      // Set the status to "pending" while the API request is in progress
      state.status = "pending";
    },
    [productsFetch.fulfilled]: (state, action) => {
      // Update the state with the fetched products and set the status to "success"
      state.items = action.payload;
      state.status = "success";
    },
    [productsFetch.rejected]: (state, action) => {
      // Set the status to "rejected" if the API request fails
      state.status = "rejected";
    },
  },
});

// Export the reducer function generated by createSlice
export default productsSlice.reducer;
